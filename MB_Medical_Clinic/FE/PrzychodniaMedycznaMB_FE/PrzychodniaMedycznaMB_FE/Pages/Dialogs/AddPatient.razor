@using MudBlazor
@using PrzychodniaMedycznaMB_FE.GQL
@using PrzychodniaMedycznaMB_FE.GQL.Dictionaries
@using PrzychodniaMedycznaMB_FE.GQL.Models.SchemaModels
@using PrzychodniaMedycznaMB_FE.GQL.Server


<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            Dodaj pacjenta
        </MudText>
    </TitleContent>
    <DialogContent>
            <MudGrid Class="mt-2">

                    <MudItem lg="6" md="6" sm="6" xs="12">

                         <MudTextField T="string" @bind-Value="newPatient.firstname" Label="Imię" Variant="Variant.Text"/>

                    </MudItem>

                    <MudItem lg="6" md="6" sm="6" xs="12">

                         <MudTextField T="string" @bind-Value="newPatient.lastname" Label="Nazwisko" Variant="Variant.Text"/>

                    </MudItem>
                    
                    <MudItem lg="6" md="6" sm="6" xs="12">

                         <MudTextField T="string" @bind-Value="newPatient.email" Label="Email" Variant="Variant.Text"/>

                    </MudItem>

            </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Anuluj</MudButton>
        <MudButton Color="Color.Success" OnClick="AddNewPatient"><MudIcon Icon="@Icons.Material.Filled.Add" Size="Size.Medium" /> &nbsp Dodaj pacjenta</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;

    [Inject] public IServerHelper _serverHelper { get; set; } = default!;

    private UserInput newPatient = new();

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task AddNewPatient()
    {
        newPatient.userId = null;
        newPatient.locationId = ProjectVariables.CurrentUserLocationId;
        newPatient.userType = 5;


        bool result = await _serverHelper.AddUser(newPatient);


        MudDialog.Close(DialogResult.Ok(result));
    }
}